/**
 * dv.viewport
 * https://github.com/diegovilar/dv.viewport
 *
 * @version 0.9.0-alpha.3
 * @license BSD
 */
!function(a){"use strict";function b(a,b){return{restrict:"ACM",link:function(c,d,g){function h(a,b,e,f,g){c.$apply(function(){i(c,{$event:a,element:d,width:b,height:e,oldWidth:f,oldHeight:g})})}var i=a(g[f]);c.$on(e,h),i(c,{$event:{name:e,targetScope:c,preventDefault:function(){this.defaultPrevented=!0},defaultPrevented:!1},element:d,width:b.getWidth(),height:b.getHeight(),oldWidth:0,oldHeight:0})}}}var c="dvViewport",d="dvViewport",e="viewportResize",f="dvViewportResize",g=25,h=30,i=!1,j=a.module(c,[]);j.directive(f,b),b.$inject=["$parse",d],j.provider(d,function(){function b(b,d,f,h){function i(){return b.innerWidth||m.clientWidth}function j(){return b.innerHeight||m.clientHeight}function k(){return b.devicePixelRatio||1}function l(a,c){function d(){c.apply(f,g)}var e,f,g,h=[].slice;return function(){f=this,g=h.call(arguments,0),b.clearTimeout(e),e=b.setTimeout(d,a)}}var m=d[0].documentElement,n=i(),o=j(),p=Math.abs(parseInt(c.debounceDelay,10))||g,q=a.element(b);return q.bind("resize",l(p,function(){var a=i(),b=j();(a!=n||b!=o)&&(h.info("dvViewport: Viewport resized from "+n+"x"+o+" to "+a+"x"+b+"."),f.$broadcast(e,a,b,n,o),n=a,o=b)})),c.pool&&(h.info("dvViewport: Pooling enabled, every "+c.poolInterval+" milliseconds."),setInterval(function(){var a=i(),b=j();(a!=n||b!=o)&&(h.info("dvViewport: Resize detected by pooling. Triggering event."),q.triggerHandler("resize"))},c.poolInterval)),h.info("dvViewport: Service instantiated."),h.info("dvViewport: Initial viewport size is "+n+"x"+o+"."),{getWidth:i,getHeight:j,getPixelRatio:k}}var c={pool:i,poolInterval:h,debounceDelay:g};return b.$inject=["$window","$document","$rootScope","$log"],{$get:b,config:function(b){a.isObject(b)&&!a.isArray(b)&&a.extend(c,a.copy(b))}}})}(angular);